1. HTML Templates
- Home Page

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Management System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="css/styles.css">
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center">Student Management System</h1>
        <div class="d-grid gap-2 mt-4">
            <a href="student_form.html" class="btn btn-primary">Add Student</a>
            <button id="viewStudents" class="btn btn-secondary">View All Students</button>
        </div>
        <div id="studentList" class="mt-5">
            <!-- Student List will appear here -->
        </div>
    </div>
    <script src="js/scripts.js"></script>
</body>
</html>


student_form.html - Add/Update Student Page

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add/Update Student</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="css/styles.css">
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center">Add or Update Student</h2>
        <form id="studentForm" class="card p-4 shadow mt-4">
            <div class="mb-3">
                <label for="studentId" class="form-label">Student ID</label>
                <input type="text" id="studentId" class="form-control" placeholder="Enter Student ID" required>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <input type="text" id="name" class="form-control" placeholder="Enter Name" required>
            </div>
            <div class="mb-3">
                <label for="age" class="form-label">Age</label>
                <input type="number" id="age" class="form-control" placeholder="Enter Age" required>
            </div>
            <div class="mb-3">
                <label for="major" class="form-label">Major</label>
                <input type="text" id="major" class="form-control" placeholder="Enter Major" required>
            </div>
            <button type="submit" class="btn btn-success w-100">Save Student</button>
            <a href="index.html" class="btn btn-secondary w-100 mt-3">Back</a>
        </form>
    </div>
    <script src="js/scripts.js"></script>
</body>
</html>

2. CSS Styles 
body {
    font-family: Arial, sans-serif;
    background-color: #f8f9fa;
}

h1, h2 {
    color: #495057;
}

.card {
    max-width: 500px;
    margin: auto;
}


3. JavaScript File 
const students = new Map(); // Stores student data

// Add or Update Student
document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("studentForm");
    if (form) {
        form.addEventListener("submit", (e) => {
            e.preventDefault();

            const studentId = document.getElementById("studentId").value.trim();
            const name = document.getElementById("name").value.trim();
            const age = parseInt(document.getElementById("age").value.trim(), 10);
            const major = document.getElementById("major").value.trim();

            if (!studentId || !name || isNaN(age) || !major) {
                alert("Please fill all fields correctly.");
                return;
            }

            if (students.has(studentId)) {
                alert(`Student with ID ${studentId} updated successfully.`);
            } else {
                alert(`Student with ID ${studentId} added successfully.`);
            }

            students.set(studentId, { name, age, major });
            form.reset();
        });
    }

    // Display Students on Home Page
    const viewButton = document.getElementById("viewStudents");
    if (viewButton) {
        viewButton.addEventListener("click", () => {
            const studentList = document.getElementById("studentList");
            studentList.innerHTML = ""; // Clear the list

            if (students.size === 0) {
                studentList.innerHTML = `<p class="text-center">No students to display.</p>`;
                return;
            }

            let html = '<ul class="list-group">';
            for (const [id, student] of students) {
                html += `<li class="list-group-item">
                    <strong>ID:</strong> ${id}, 
                    <strong>Name:</strong> ${student.name}, 
                    <strong>Age:</strong> ${student.age}, 
                    <strong>Major:</strong> ${student.major}
                </li>`;
            }
            html += "</ul>";
            studentList.innerHTML = html;
        });
    }
});
